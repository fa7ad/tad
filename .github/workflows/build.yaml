name: Build Tad

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install OpenSSL
        run: choco install openssl
      - run: npm install
      - run: npm run build
      - run: npm run publish
        working-directory: packages/tad-app
        env:
          OPENSSL_ROOT_DIR: C:\\Program Files\\OpenSSL-Win64
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: WindowsBuildOutputs
          path: packages/tad-app/dist/*

  Linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm install
      - run: npm run build
      - run: npm run publish
        working-directory: packages/tad-app
        env:
          BUILDNUMBER: " "
          BUILD_BUILDNUMBER: " "
          CI_PIPELINE_IID: " "
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: LinuxBuildOutputs
          path: packages/tad-app/dist/tad*

  macOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: HOMEBREW_NO_AUTO_UPDATE=1 brew install openssl@3
      - run: HOMEBREW_NO_AUTO_UPDATE=1 brew install jq
      - run: npm install
      - run: npm run build
      - name: Decode and Install Certificate
        run: |
          echo "${{ secrets.APPLE_CERTIFICATE }}" | base64 --decode > certificate.p12
          security create-keychain -p "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" build.keychain
      - run: npm run publish
        working-directory: packages/tad-app
        env:
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          CSC_LINK: "file://${{ github.workspace }}/certificate.p12"
          CSC_KEY_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: MacOSBuildOutputs
          path: |
            packages/tad-app/dist/Tad*.zip
            packages/tad-app/dist/Tad*.dmg
